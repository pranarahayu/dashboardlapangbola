# -*- coding: utf-8 -*-
"""PSxGModel.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1EZS8BvyD_fOOaO0zUtE_gUe__Z4K4d3B
"""

from sklearn import preprocessing
import statsmodels.api as sm
import statsmodels.formula.api as smf

import os
import pandas as pd
import glob
from datetime import date
import numpy as np

#mount to gdrive
from google.colab import drive
drive.mount('/content/gdrive', force_remount=True)

#loading the latest file update to a dataframe
path = '/content/gdrive/MyDrive/Liga Indonesia 2022/xG/Shots/For xGOT'
files = glob.glob(os.path.join(path, "*.xlsx"))

df = pd.DataFrame()
newest = max(files, key=os.path.getctime)
data = pd.read_excel(newest)
df = df.append(data)

#converting categorical to numerical columns
label_encoder = preprocessing.LabelEncoder()
label_encoder.fit(df["body_part"])
df['body_part_num'] = label_encoder.transform(df["body_part"])

label_encoder = preprocessing.LabelEncoder()
label_encoder.fit(df["situation"])
df['situation_num'] = label_encoder.transform(df["situation"])

##Variables
model_variables = ['angledeg','distance','body_part_num','situation_num']
model=''
for v in model_variables[:-1]:
    model = model  + v + ' + '
model = model + model_variables[-1]

##Modeling 1
test_model = smf.glm(formula="goal ~ " + model, data=df, 
                           family=sm.families.Binomial()).fit()
print(test_model.summary())        
b=test_model.params

#Creating xG function to calculate the xG
def calculate_PSxG(sh):    
   bsum=b[0]
   for i,v in enumerate(model_variables):
       bsum=bsum+b[i+1]*sh[v]
   PSxG = 1/(1+np.exp(bsum)) 
   return PSxG   

PSxG=df.apply(calculate_PSxG, axis=1) 
df = df.assign(PSxG=PSxG)

#Other than penalties, all xG seems weird. This function fix that
def psxgfix(row):
  if row['situation'] == 'Penalty':
    return row['PSxG']
  else:
    return 1-row['PSxG']
df['PSxG'] = df.apply(lambda row: psxgfix(row), axis=1)